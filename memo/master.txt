

JRE : Java 언어로 제작된 프로그램을 실행하기 위한 도구
JDK : Java 언어를 활용하여 Java 프로그램을 제작할 수 있는 도구
IDE : 통합 개발 환경 / 이클립스, 비쥬얼 스튜디오 같은 도구


* 뷰
-> 파일이나 디렉토리를 개발자가 보기 편하게 구조화해서 보여주는 도구

Project Explorer
-> 웹 개발에 최적화면 뷰
-> 추후 자바 웹 개발할때 많이 사용 함

Package Explorer
-> 자바 패키지 형태로 보여주는 뷰
-> 패키지 형태로 기본 자바에서 많이 사용 함

Navigator
-> 윈도우 탐색기와 비슷한 형태의 뷰
-> 윈도우 탐색기 모양에 익숙한 개발자가 많이 선호하는 뷰






src : 개발자가 작성한 소스파일이 있는 폴더
bin : 소스파일을 가지고 기계어로 번역된 바이너리 파일이 있는 폴더
	(추후 바이너리 파일을 가지고 JVM이 실행 함)

@ 이름 표기법

1. 프로젝트명
-> 이클립스의 프로젝트 의미는 하나의 큰 작업이라는 의미(ex. 쇼핑몰 프로젝트)
-> 여러개의 패키지가 존재하는 공간
-> 프로젝트명은 낙타표기법을 이용하여 표기하며
(소문자로 시작하여 구분하는 단어마다 첫글자는 대문자로 표기함)
ex) javaProject

2. 패키지명
-> 패키지는 프로젝트 안에 존재하는 폴더
-> 패키지 안에 다양한 소스 파일들이 존재함
-> 패키지명은 모두 소문자로 표기하여 점(.)을 이용하여 폴더들을 구분 함
ex) com.kh.test1

3. 클래스명
-> 실제 소스코드가 들어있는 파일
-> 클래스명은 첫글자가 대문자이며, 구분 단어마다 첫글자는 대문자
ex) SampleMain


---------------------------- 배열 ---------------------------------------

@ 배열
-> 배열은 동일한 타입을 가지는 변수들의 집합

@ 배열의 쓰임
-> 여러개의 변수를 한번에 선언 가능함
-> 같은 형의 변수들을 연속적으로 사용할 수 있음


@ 배열의 선언
-> 배열은 사용하기 위해서는 주소값을 저장하기 위한 레퍼런스 변수가 필요함
	- 자료형 [] 변수이름;
	- 자료형 변수이름 [];
	ex) int [] arr;   또는 int arr []; 
	-> arr같은 변수를 레퍼런스 변수라고 함

@ 배열의 생성
-> 배열은 레퍼런스만으로는 사용할 수 없음
-> 실제 데이터를 저장하기 위한 배열을 만들어야 함
-> 레퍼런스이름 = new 자료형[저장공간개수]
	ex) arr = new int [5];
	5개의 int형으로 이루어진 공간을 가진 배열의 주소를 
	arr의 저장한다는 의미

@ 메모리 구조  (배열을 이해하기 위한 내용)
Stack	-> 일반 변수와 레퍼런스 변수는 Stack 메모리에 생성
Heap	-> New 연산자를 사용하여 만든경우 Heap 메모리에 생성 (동적메모리)
Static	-> 정적(static) 변수나 메소드는 Static 메모리에 생성

ex) 
int [] arr = new int[5]; 
arr는 레퍼런스 변수이므로 Stack 메모리에 생성 됨
new int[5]로 만든 배열은 new 연산자를 사용했으므로 Heap이라는
메모리에 생성 됨


@ 배열의 초기화
int [] arr  = new int[5];  //5개의 int공간을 가지고 있는 배열을 생성
-> 배열은 초기 생성시 초기값을 0을 가지고 있음
 (int 형은 0 / boolean형은 false / char 형은 '' )

int : 정수를 저장하는 데이터형 (그외 short / long 형도 있음)
double : 실수를 저장하는 데이터형 (그외 float 형도 있음)
















































































